version: 2.1

commands:
  s3sync:
    parameters:
      bucket:
        type: string
    steps:
      - run:
          command: "aws s3 sync ./build s3://<< parameters.bucket >>/ --acl=\"public-read\" --delete --cache-control max-age=31536000,public"
      - run:
          command: "aws s3 cp s3://<< parameters.bucket >>/index.html s3://<< parameters.bucket >>/index.html --metadata-directive REPLACE --cache-control max-age=0,no-cache,no-store,must-revalidate --content-type text/html --acl public-read"

  terraform:
    description: Plan and apply a Terraform configuration
    parameters:
      path:
        type: string
        default: terraform
    steps:
      - checkout
      - run: mkdir -p ~/bin && wget -O ~/bin/sops https://github.com/mozilla/sops/releases/download/v3.5.0/sops-v3.5.0.linux && chmod +x ~/bin/sops
      - run: ~/bin/sops -d secrets.tfvars.json > tfvars.json
      - run: terraform init -input=false -backend-config="bucket=hegiphy-terraform-state" -backend-config="key=terraform.tfstate" << parameters.path >>
      - run: terraform plan -input=false -var-file=tfvars.json -out terraform.plan << parameters.path >>
      - run: terraform apply terraform.plan

orbs:
  aws-cli: circleci/aws-cli@0.1.13

jobs:
  test_api:
    docker:
      - image: circleci/python:3.6
    working_directory: ~/project/hegiphy-api
    steps:
      - checkout:
          path: ~/project
      - run: pip install tox
      - run: tox

  build_api:
    docker:
      - image: circleci/python:3.6
    working_directory: ~/project/hegiphy-api
    steps:
      - checkout:
          path: ~/project
      - run: ./build.sh
      - persist_to_workspace:
          root: ~/project
          paths: hegiphy-api/dist/lambda.zip

  aws_auth:
    executor: aws-cli/default
    environment:
      AWS_REGION: us-east-1
    steps:
      - checkout
      - aws-cli/install
      - aws-cli/configure:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_REGION
      - persist_to_workspace:
          root: ~/.aws
          paths:
            - "*"

  terraform:
    docker:
      - image: hashicorp/terraform:0.12.26
    steps:
      - checkout
      - attach_workspace:
          at: ~/.aws
      - attach_workspace:
          at: ~/project
      - terraform

  test_ui:
    docker:
      - image: circleci/node:12
    working_directory: ~/project/hegiphy-ui
    steps:
      - checkout:
          path: ~/project
      - restore_cache:
          keys:
            - ui-dependencies-{{ checksum "package.json" }}
            - ui-dependencies-
      - run: yarn install
      - run: yarn format-check
      - save_cache:
          paths:
            - node_modules
          key: ui-dependencies-{{ checksum "package.json" }}

  deploy_ui:
    docker:
      - image: circleci/node:12
    working_directory: ~/project/hegiphy-ui
    steps:
      - checkout:
          path: ~/project
      - aws-cli/install
      - attach_workspace:
          at: ~/.aws
      - restore_cache:
          keys:
            - ui-dependencies-{{ checksum "package.json" }}
            - ui-dependencies-
      - run: yarn install
      - save_cache:
          paths:
            - node_modules
          key: ui-dependencies-{{ checksum "package.json" }}
      - run: yarn build
      - s3sync:
          bucket: budjb-hegiphy-ui

workflows:
  release:
    jobs:
      - aws_auth:
          context: aws-personal
          filters:
            branches:
              only:
                - master
      - test_api
      - test_ui
      - build_api
      - terraform:
          requires:
            - aws_auth
            - test_api
            - build_api
          filters:
            branches:
              only:
                - master
      - deploy_ui:
          requires:
            - terraform
            - test_ui
          filters:
            branches:
              only:
                - master
